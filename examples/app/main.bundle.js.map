{"version":3,"sources":["C:/git/ngx-graphexp/src/$_lazy_route_resource lazy","C:/git/ngx-graphexp/src/app/app.component.css","C:/git/ngx-graphexp/src/app/app.component.html","C:/git/ngx-graphexp/src/app/app.component.ts","C:/git/ngx-graphexp/src/app/app.module.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/graphViz/graphConfig.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/graphViz/graphLayers.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/graphViz/graphLinks.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/graphViz/graphNodes.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/graphViz/graphShapes.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/graphViz/graphViz.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/graphexp.component.css","C:/git/ngx-graphexp/src/app/modules/graphexp/graphexp.component.html","C:/git/ngx-graphexp/src/app/modules/graphexp/graphexp.component.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/graphexp.module.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/graphexp.service.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/index.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/link-edit/link-edit.component.css","C:/git/ngx-graphexp/src/app/modules/graphexp/link-edit/link-edit.component.html","C:/git/ngx-graphexp/src/app/modules/graphexp/link-edit/link-edit.component.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/node-edit/node-edit.component.css","C:/git/ngx-graphexp/src/app/modules/graphexp/node-edit/node-edit.component.html","C:/git/ngx-graphexp/src/app/modules/graphexp/node-edit/node-edit.component.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/nodes/d3Node.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/nodes/gremlinLink.ts","C:/git/ngx-graphexp/src/app/modules/graphexp/nodes/gremlinNode.ts","C:/git/ngx-graphexp/src/environments/environment.ts","C:/git/ngx-graphexp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/git/ngx-graphexp/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/git/ngx-graphexp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<sv-graphexp [graphexpService]=\\\"service\\\" [graphConfig]=\\\"graphConfig\\\"></sv-graphexp>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/git/ngx-graphexp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { GraphConfig, GraphexpService } from '@savantly/ngx-graphexp';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'sv-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  graphConfig: GraphConfig = new GraphConfig();\n\n  constructor (public service: GraphexpService) {\n    this.graphConfig.nodeLabels = ['god', 'titan', 'demigod', 'human', 'monster', 'location'];\n    this.graphConfig.linkLabels = ['is_father_of', 'has_pet', 'lives_in'];\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { GraphexpModule, GraphexpService } from '@savantly/ngx-graphexp';\nimport { GremlinClientOptions } from '@savantly/gremlin-js';\n\nimport { RouterModule, Routes } from '@angular/router';\nconst routes: Routes = [];\n\nexport const graphexpService = new GraphexpService(new GremlinClientOptions());\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    BrowserAnimationsModule,\n    GraphexpModule\n  ],\n  providers: [{provide: GraphexpService, useValue: graphexpService}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  constructor() {\n    console.log('Constructed AppModule');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/app.module.ts","import { GraphsonFormat } from '../graphexp.service';\r\nimport * as d3 from 'd3';\r\n\r\nexport class GraphConfig {\r\n  enableEdit = true;\r\n  nodeLabels: string[] = [];\r\n  linkLabels: string[] = [];\r\n  numberOfLayers = 3;\r\n\r\n  format: GraphsonFormat = GraphsonFormat.GraphSON3;\r\n\r\n  // Physics\r\n  force_strength = -600;\r\n  link_strength = 0.2;\r\n  force_x_strength = 0.1;\r\n  force_y_strength = 0.1;\r\n\r\n  // Nodes\r\n  default_node_size = 15;\r\n  default_stroke_width = 2;\r\n  default_node_color = '#80E810';\r\n  active_node_margin = 6;\r\n  active_node_margin_opacity = 0.3;\r\n\r\n  // Edges\r\n  default_edge_stroke_width = 3;\r\n  default_edge_color = '#CCC';\r\n  edge_label_color = '#111';\r\n\r\n  colorPalette: (item: any) => any = d3.scaleOrdinal(d3.schemeCategory20);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/graphViz/graphConfig.ts","import { D3Node } from '../nodes/d3Node';\r\nimport { GraphConfig } from './graphConfig';\r\nimport { GraphViz } from './graphViz';\r\nimport * as d3 from 'd3';\r\n\r\nexport class GraphLayers {\r\n  // Submodule that handles layers of visualization\r\n\r\n  old_Nodes: D3Node[] = [];\r\n  old_Links: D3Node[] = [];\r\n  _Nodes: D3Node[] = [];\r\n  _Links: D3Node[] = [];\r\n\r\n  depth() {\r\n    return this.config.numberOfLayers;\r\n  }\r\n\r\n  get config(): GraphConfig {\r\n    return this.graphViz.config;\r\n  }\r\n\r\n  get nodes() {\r\n    return this._Nodes;\r\n  }\r\n  get links() {\r\n    return this._Links;\r\n  }\r\n\r\n  get _svg() {\r\n    return this.graphViz.graphRoot;\r\n  }\r\n\r\n  push_layers() {\r\n    // old links and nodes become older\r\n    // and are moved to the next deeper layer\r\n    for (let k = this.config.numberOfLayers; k > 0; k--) {\r\n      const kp = k - 1;\r\n      this._svg.selectAll('.old_edge' + kp).classed('old_edge' + k, true);\r\n      this._svg.selectAll('.old_node' + kp).classed('old_node' + k, true);\r\n      this._svg.selectAll('.old_edgepath' + kp).classed('old_edgepath' + k, true);\r\n      this._svg.selectAll('.old_edgelabel' + kp).classed('old_edgelabel' + k, true);\r\n    };\r\n  }\r\n\r\n  clear_old() {\r\n    this.old_Nodes = [];\r\n    this.old_Links = [];\r\n  }\r\n\r\n  update_data(d: {nodes: D3Node[], links: D3Node[] }) {\r\n    // Save the data\r\n    const previous_nodes = this._svg.selectAll('g').filter('.active_node');\r\n    const previous_nodes_data = previous_nodes.data();\r\n    this.old_Nodes = this.updateAdd(this.old_Nodes, previous_nodes_data);\r\n    const previous_links = this._svg.selectAll('.active_edge');\r\n    const previous_links_data = previous_links.data();\r\n    this.old_Links = this.updateAdd(this.old_Links, previous_links_data);\r\n\r\n    // handle the pinned nodes\r\n    const pinned_Nodes = this._svg.selectAll('g').filter('.pinned');\r\n    const pinned_nodes_data = pinned_Nodes.data();\r\n\r\n      // get the node data and merge it with the pinned nodes\r\n    this._Nodes = d.nodes;\r\n    this._Nodes = this.updateAdd(this._Nodes, pinned_nodes_data);\r\n    // add coordinates to the new active nodes that already existed in the previous step\r\n    this._Nodes = this.transfer_coordinates(this._Nodes, this.old_Nodes);\r\n    // retrieve the links between nodes and pinned nodes\r\n    this._Links = d.links.concat(previous_links_data); // first gather the links\r\n    this._Links = this.find_active_links(this._Links, this._Nodes); // then find the ones that are between active nodes\r\n\r\n  }\r\n\r\n  updateAdd(array1: D3Node[], array2: D3Node[]) {\r\n    // Update lines of array1 with the ones of array2 when the elements' id match\r\n    // and add elements of array2 to array1 when they do not exist in array1\r\n    const arraytmp = array2.slice(0);\r\n    const removeValFromIndex = [];\r\n    array1.forEach((d, index, thearray) => {\r\n      for (let i = 0; i < arraytmp.length; i++) {\r\n        if (d.id === arraytmp[i].id) {\r\n          thearray[index] = arraytmp[i];\r\n          removeValFromIndex.push(i);\r\n        }\r\n      }\r\n    });\r\n    // remove the already updated values (in reverse order, not to mess up the indices)\r\n    removeValFromIndex.sort();\r\n    for (let i = removeValFromIndex.length - 1; i >= 0; i--) {\r\n      arraytmp.splice(removeValFromIndex[i], 1);\r\n    }\r\n    return array1.concat(arraytmp);\r\n  }\r\n\r\n  find_active_links(list_of_links: D3Node[], active_nodes: D3Node[]) {\r\n    // find the links in the list_of_links that are between the active nodes and discard the others\r\n    let active_links: D3Node[] = [];\r\n    list_of_links.forEach((row) => {\r\n      for (let i = 0; i < active_nodes.length; i++) {\r\n        for (let j = 0; j < active_nodes.length; j++) {\r\n          if (active_nodes[i].id === row.source.id && active_nodes[j].id === row.target.id) {\r\n            const L_data = new D3Node(row);\r\n            L_data.source = row.source.id;\r\n            L_data.target = row.target.id;\r\n            active_links = active_links.concat(L_data);\r\n          } else if (active_nodes[i].id === row.source && active_nodes[j].id === row.target) {\r\n            const L_data = row;\r\n            active_links = active_links.concat(L_data);\r\n          }\r\n        }\r\n      }\r\n    });\r\n    // the active links are in active_links but there can be some duplicates\r\n    // remove duplicates links\r\n    const dic = {};\r\n    for (let i = 0; i < active_links.length; i++) {\r\n      dic[active_links[i].id] = active_links[i]; // this will remove the duplicate links (with same id)\r\n    }\r\n    const list_of_active_links = [];\r\n    for (const key of Object.keys(dic)) {\r\n      list_of_active_links.push(dic[key]);\r\n    }\r\n    return list_of_active_links;\r\n  }\r\n\r\n\r\n  transfer_coordinates(Nodes, old_Nodes) {\r\n    // Transfer coordinates from old_nodes to the new nodes with the same id\r\n    for (let i = 0; i < old_Nodes.length; i++) {\r\n      const exists = 0;\r\n      for (let j = 0; j < Nodes.length; j++) {\r\n        if (Nodes[j].id === old_Nodes[i].id) {\r\n          Nodes[j].x = old_Nodes[i].x;\r\n          Nodes[j].y = old_Nodes[i].y;\r\n          Nodes[j].fx = old_Nodes[i].x;\r\n          Nodes[j].fy = old_Nodes[i].y;\r\n          Nodes[j].vx = old_Nodes[i].vx;\r\n          Nodes[j].vy = old_Nodes[i].vy;\r\n        }\r\n      }\r\n    }\r\n    return Nodes;\r\n  }\r\n\r\n  remove_duplicates(elem_class, elem_class_old) {\r\n    // Remove all the duplicate nodes and edges among the old_nodes and old_edges.\r\n    // A node or an edge can not be on several layers at the same time.\r\n    d3.selectAll(elem_class).each((d) => {\r\n      const ID = d.id;\r\n      for (let n = 0; n < this.config.numberOfLayers; n++) {\r\n        const list_old_elements = d3.selectAll(elem_class_old + n);\r\n        // list_old_nodes_data = list_old_nodes.data();\r\n        list_old_elements.each((od) => {\r\n          if (od.id === ID) {\r\n            d3.select(this).remove();\r\n            // console.log('Removed!!')\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  constructor(private graphViz: GraphViz) { }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/graphViz/graphLayers.ts","import {ArrangedGraphData} from '../graphexp.service';\nimport { D3Node } from '../nodes/d3Node';\nimport { GraphConfig } from './graphConfig';\nimport {GraphViz} from './graphViz';\nimport * as d3 from 'd3';\n\nexport class GraphLinks {\n\n  get config(): GraphConfig {\n    return this.graphViz.config;\n  }\n\n  get graphRoot() {\n    return this.graphViz.graphRoot;\n  }\n\n  get linkModels(): D3Node[] {\n    return this.graphViz.linkModels;\n  }\n\n  get nodeModels(): D3Node[] {\n    return this.graphViz.nodeModels;\n  }\n\n  get selectLinks() {\n    return this.graphViz.selectLinks;\n  }\n\n  get selectEdgePaths() {\n    return this.graphViz.selectEdgePaths;\n  }\n\n  get selectEdgeLabels() {\n    return this.graphViz.selectEdgeLabels;\n  }\n\n  get selectGraphNodes() {\n    return this.graphViz.selectGraphNodes;\n  }\n\n  update(arrangedData: ArrangedGraphData) {\n\n    // links not active anymore are classified old_links\n    this.selectLinks.exit().classed('old_edge0', true).classed('active_edge', false);\n    this.selectEdgePaths.exit().classed('old_edgepath0', true).classed('active_edgepath', false);\n    this.selectEdgeLabels.exit().classed('old_edgelabel0', true).classed('active_edgelabel', false);\n\n\n    // handling active links associated to the data\n    const edgepaths_e = this.selectEdgePaths.enter(),\n      edgelabels_e = this.selectEdgeLabels.enter(),\n      link_e = this.selectLinks.enter();\n    const decor_out = this.decorate(link_e, edgepaths_e, edgelabels_e);\n\n    const links = decor_out[0], edgepaths = decor_out[1],\n      edgelabels = decor_out[2];\n\n    // previous links plus new links are merged\n    links.merge(this.selectLinks);\n    edgepaths.merge(this.selectEdgePaths);\n    edgelabels.merge(this.selectEdgeLabels);\n  }\n\n  tick() {\n    this.selectLinks\n      .attr('x1', function(d) {\n        return d.source.x;\n      })\n      .attr('y1', function(d) {\n        return d.source.y;\n      })\n      .attr('x2', function(d) {\n        return d.target.x;\n      })\n      .attr('y2', function(d) {\n        return d.target.y;\n      });\n\n    this.selectEdgePaths.attr('d', function(d) {\n      return 'M ' + d.source.x + ' ' + d.source.y + ' L ' + d.target.x + ' ' + d.target.y;\n    });\n\n    this.selectEdgeLabels.attr('transform', function(d) {\n      if (d.target.x < d.source.x) {\n        const bbox = this.getBBox();\n\n        const rx = bbox.x + bbox.width / 2;\n        const ry = bbox.y + bbox.height / 2;\n        return 'rotate(180 ' + rx + ' ' + ry + ')';\n      } else {\n        return 'rotate(0)';\n      }\n    });\n  }\n\n  getStrokeWidth(d) {\n    if ('stroke_width' in d) {\n      return d.stroke_width;\n    } else {\n      return this.config.default_edge_stroke_width;\n    }\n  }\n\n  getEdgeText(d) {\n    if ('text' in d) {\n      return d.text;\n    } else {\n      return d.properties.weight;\n    }\n  }\n\n  getEdgeColor(d) {\n    if ('color' in d) {\n      return d.color;\n    } else {\n      return this.config.default_edge_color;\n    }\n  }\n\n\n  decorate(edges, edgepaths, edgelabels) {\n    const edges_deco = edges.append('line').attr('class', 'edge').classed('active_edge', true)\n      .attr('source_ID', function(d) {\n        return d.source;\n      })\n      .attr('target_ID', function(d) {\n        return d.target;\n      })\n      .attr('ID', function(d) {\n        return d.id;\n      });\n\n    this.createMarkers(edges_deco);\n    // Attach the arrows\n    edges_deco.attr('marker-end', function(d) {\n      return 'url(#marker_' + d.id + ')'\n    })\n      .attr('stroke-width', (d) => this.getStrokeWidth(d))\n      .append('title').text(function(d) {\n        return d.properties.weight;\n      });\n\n    // Attach the edge labels\n    const e_label = this.createEdgeLabels(edgepaths, edgelabels);\n    const edgepaths_deco = e_label[0];\n    const edgelabels_deco = e_label[1];\n\n    edgelabels_deco.append('textPath')\n      .attr('class', 'edge_text')\n      .attr('href', function(d, i) {\n        return '#edgepath' + d.id\n      })\n      .style('text-anchor', 'middle')\n      .style('pointer-events', 'none')\n      .attr('startOffset', '50%')\n      .text(function(d) {\n        return d.label\n      });\n\n\n    // Attach the edge actions\n    this.attachEdgeEvents(edges_deco)\n\n\n    // Add property info if checkbox checked\n    this.addEnabledProperties('edges', edgelabels_deco)\n\n    return [edges_deco, edgepaths_deco, edgelabels_deco]\n\n  }\n\n  nodeModelById(id): D3Node {\n    // return data associated to the node with id 'id'\n    for (const node in this.nodeModels) {\n      // console.log(_Nodes[node])\n      if (this.nodeModels[node].id === id) {\n        return this.nodeModels[node];\n      }\n    }\n  }\n\n  createMarkers(edge_in) {\n    const edge_data = edge_in.data();\n    const arrow_data = this.graphRoot.selectAll('.arrow').data();\n    const data = arrow_data.concat(edge_data);\n\n    this.graphRoot.selectAll('.arrow')\n      .data(data)\n      .enter()\n      .append('marker')\n      .attr('class', 'arrow')\n      .attr('id', (d) => {return 'marker_' + d.id})\n      .attr('markerHeight', 5)\n      .attr('markerWidth', 5)\n      .attr('markerUnits', 'strokeWidth')\n      .attr('orient', 'auto')\n      .attr('refX', (d) => {\n        const node = this.nodeModelById(d.target);\n        return this.graphViz.graphNodes.getNodeSize(node) + this.graphViz.graphNodes.getNodeStrokeWidth(node);\n      })\n      .attr('refY', 0)\n      .attr('viewBox', '0 -5 10 10')\n      .append('svg:path')\n      .attr('d', 'M0,-5L10,0L0,5')\n      .style('fill', (d) => {return this.getEdgeColor(d)});\n  }\n\n  addEnabledProperties(item, selected_items) {\n    // Add text from a property if the checkbox is checked on the sidebar\n    const item_properties = [];\n    if (item === 'edges') {\n      // TODO: get properties\n      // item_properties = this.graphexpService.edgeProperties.value;\n    } else if (item === 'nodes') {\n      // item_properties = this.graphexpService.nodeProperties.value;\n    }\n    for (let prop_idx = 0; prop_idx < item_properties.length; prop_idx++) {\n      const prop_name = item_properties[prop_idx];\n      const prop_id_nb = prop_idx;\n      const prop_id = item + '_' + prop_name;\n      this.graphViz.attachEnabledProperties(selected_items, prop_name, prop_id_nb, item);\n    }\n  }\n\n\n  createEdgeLabels(edgepaths, edgelabels) {\n    const edgepaths_deco = edgepaths.append('path')\n      .attr('class', 'edgepath').classed('active_edgepath', true)\n      .attr('fill-opacity', 0)\n      .attr('stroke-opacity', 0)\n      .attr('id', function(d, i) {\n        return 'edgepath' + d.id;\n      })\n      .attr('ID', function(d) {\n        return d.id;\n      })\n      .style('pointer-events', 'none');\n\n    const edgelabels_deco = edgelabels.append('text')\n      .attr('dy', -3)\n      .style('pointer-events', 'none')\n      .attr('class', 'edgelabel').classed('active_edgelabel', true)\n      .attr('id', function(d, i) {\n        return 'edgelabel' + d.id\n      })\n      .attr('ID', function(d) {\n        return d.id;\n      })\n      .attr('font-size', 10)\n      .attr('fill', this.config.edge_label_color);\n\n    return [edgepaths_deco, edgelabels_deco];\n\n\n  }\n\n  attachEdgeEvents(edge) {\n    edge.on('mouseover', (theEdge, index, elements) => {\n      console.log('mouse over!!');\n      const line = elements[index];\n      d3.select(line).selectAll('.text_details').style('visibility', 'visible');\n    })\n      .on('mouseout', (theEdge, index, elements) => {\n        const line = elements[index];\n        d3.select(line).selectAll('.text_details').style('visibility', 'hidden');\n      })\n      .on('click', (theEdge, index, elements) => {\n        console.log('edge clicked!');\n      });\n\n  }\n\n\n  constructor(private graphViz: GraphViz) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/graphViz/graphLinks.ts","import {ArrangedGraphData} from '../graphexp.service';\nimport { D3Node } from '../nodes/d3Node';\nimport { ConnectionCreatedEvent } from './ConnectionCreatedEvent';\nimport { GraphConfig } from './graphConfig';\nimport {GraphViz} from './graphViz';\nimport * as d3 from 'd3';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nexport class GraphNodes {\n\n  mouseDownNode: D3Node;\n\n  public connectionCreated: BehaviorSubject<ConnectionCreatedEvent> = new BehaviorSubject<ConnectionCreatedEvent>(null);\n\n  get config(): GraphConfig {\n    return this.graphViz.config;\n  }\n  get graphRoot() {\n    return this.graphViz.graphRoot;\n  }\n\n  get nodeModels() {\n    return this.graphViz.nodeModels;\n  }\n\n  get simulation() {\n    return this.graphViz.simulation;\n  }\n\n  get isShifted() {\n    return window.event['shiftKey'] === true;\n  }\n\n  /**\n   * get all active nodes in the graph\n   */\n  get graphNodes() {\n    return this.graphViz.selectGraphNodes;\n  }\n\n  mouseXY(relativeNode) {\n    const xy = d3.mouse(relativeNode);\n    return {\n      x: xy[0],\n      y: xy[1]\n    }\n  }\n\n  /**\n   * for each tick\n   */\n  tick() {\n    this.graphNodes\n      .attr('transform', function(d) {\n        return `translate(${d.x}, ${d.y})`;\n      });\n  }\n\n  /**\n   * update the node data in the graph\n   */\n  update(arrangedData: ArrangedGraphData) {\n    console.log('GraphNodes#update');\n\n    // old nodes not active any more are tagged\n    this.graphNodes.exit().classed('old_node0', true).classed('active_node', false);\n\n    // nodes associated to the data are constructed\n    let nodes = this.graphNodes.enter();\n\n    // add node decoration\n    const node_deco = this.decorateNodes(nodes);\n    nodes = node_deco.merge(nodes);\n  }\n\n  decorateNodes(node) {\n    const _self = this;\n    const node_deco = node.append('g')\n      .attr('class', 'active_node').attr('ID', function(d) {\n        return d.id;\n      })\n      .classed('node', true);\n\n    // Attach the event listener\n    this.attachNodeEvents(node_deco)\n    node_deco.moveToFront();\n\n    // Create the circle shape\n    const node_base_circle = node_deco.append('circle').classed('base_circle', true)\n      .attr('r', (d) => this.getNodeSize(d))\n      .style('stroke-width', (d) => this.getNodeStrokeWidth(d))\n      .style('stroke', 'black')\n      .attr('fill', (d) => this.getNodeColor(d));\n    node_base_circle.append('title').text(d => this.getNodeText(d));\n\n    // Add the text to the nodes\n    node_deco.append('text').classed('text_details', true)\n      .attr('x', (d) => {\n        return this.config.default_node_size + 2;\n      })\n      .text(d => this.getNodeText(d))\n      .style('visibility', 'hidden');\n\n    node_deco.append('text').classed('text_details', true)\n      .attr('x', (d) => {\n        return this.config.default_node_size + 4;\n      })\n      .attr('y', this.config.default_node_size)\n      .text(d => this.getNodeSubText(d))\n      .style('visibility', 'hidden');\n\n\n    // Add the node pin\n    const node_pin = node_deco.append('circle').classed('Pin', true)\n      .attr('r', (d) => {\n        return this.config.default_node_size / 2;\n      })\n      .attr('transform', (d) => {\n        return 'translate(' + (this.config.default_node_size * 3 / 4) + ',' + (-this.config.default_node_size * 3 / 4) + ')';\n      })\n      .attr('fill', this.config.default_node_color)\n      .moveToBack()\n      .style('visibility', 'hidden');\n\n    node_pin.on('click', function(this, d) {\n      _self.pinIt(this, d);\n    });\n\n    // spot the active node and draw additional circle around it\n    /* TODO: make active node different\n    if (with_active_node) {\n      d3.selectAll('.active_node').each((d) => {\n        if (d.id === with_active_node) {\n          const n_radius = Number(d3.select(this).select('.base_circle').attr('r')) + this.active_node_margin;\n          d3.select(this)\n            .append('circle').classed('focus_node', true)\n            .attr('r', n_radius)\n            .attr('fill', this.node_color)\n            .attr('opacity', this.active_node_margin_opacity)\n            .moveToBack();\n        }\n      });\n    }\n     */\n\n    return node_deco;\n  }\n\n  attachNodeEvents(node) {\n    const _self = this;\n    node.call(d3.drag()\n      .on('start', function(d) {\n        if (_self.isShifted) {\n          _self.dragConnectionStarted(d);\n        } else {\n          _self.dragNodeStarted(d);\n        }\n      })\n      .on('drag', function(d) {\n        if (_self.isShifted) {\n          _self.draggingConnection(d);\n        } else {\n          _self.draggingNode(d);\n        }\n      })\n      .on('end', (ev) => {\n        if (this.isShifted) {\n          this.dragConnectionEnded(ev);\n        } else {\n          this.dragNodeEnded(ev);\n        }\n      }));\n\n\n    node.on('click', (ev) => {this.clicked(ev)})\n      .on('mouseover', function() {\n        d3.select(this).select('.Pin').style('visibility', 'visible');\n        d3.select(this).selectAll('.text_details').style('visibility', 'visible');\n      })\n      .on('mouseout', function() {\n        const chosen_node = d3.select(this);\n        if (!chosen_node.classed('pinned')) {\n          d3.select(this).select('.Pin').style('visibility', 'hidden');\n        }\n        if (!this.show_name) {\n          d3.select(this).selectAll('.text_details').style('visibility', 'hidden');\n        }\n      });\n  }\n\n   getConnectedEdgesByNodeId(node_id) {\n    // Return the in and out edges of node with id 'node_id'\n    const connected_edges = d3.selectAll('.edge').filter(\n      function(item) {\n        if (item.source === node_id || item.source.id === node_id) {\n          return item;\n        } else if (item.target === node_id || item.target.id === node_id) {\n          return item;\n        }\n      });\n    return connected_edges;\n  }\n\n  //////////////////////////////////\n  // Handling mouse events\n\n  dragConnectionStarted(d) {\n    this.mouseDownNode = d;\n  }\n\n  dragNodeStarted(d) {\n    if (!d3.event.active) {\n      this.simulation.alphaTarget(0.3).restart();\n    }\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n\n  draggingConnection(d) {\n    // reposition dragged directed edge\n    if (!this.mouseDownNode) {\n      return;\n    }\n    const dragLine = this.graphViz.dragLine.classed('hidden', false);\n    const transform = this.graphRoot.attr('transform');\n    this.graphViz.dragLine\n      .attr('d', `M ${d.x},${d.y} L ${d3.event.x}, ${d3.event.y}`)\n      .attr('transform', transform);\n    console.log('dragging new connection');\n  }\n\n  draggingNode(d) {\n    const connected_edges = this.getConnectedEdgesByNodeId(d.id);\n    const f_connected_edges = connected_edges.filter('*:not(.active_edge)')\n    if (f_connected_edges._groups[0].length === 0) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    } else {\n      f_connected_edges\n        .style('stroke-width', function() {\n          return parseInt(d3.select(this).attr('stroke-width'), 10) + 2;\n        })\n        .style('stroke-opacity', 1)\n        .classed('blocking', true)\n    }\n  }\n\n  dragConnectionEnded(d) {\n    const target = d3.event.sourceEvent.toElement;\n    this.graphViz.dragLine.classed('hidden', true);\n    console.log(`connecting to: ${target}`);\n    this.connectionCreated.next({\n      source: this.mouseDownNode,\n      target: d3.select(target).data()[0]\n    });\n  }\n\n  dragNodeEnded(d) {\n    if (!d3.event.active) {\n      this.simulation.alphaTarget(0);\n    }\n    d3.selectAll('.blocking')\n      .style('stroke-width', function() {\n        return d3.select(this).attr('stroke-width');\n      })\n      .style('stroke-opacity', function() {\n        return d3.select(this).attr('stroke-opacity');\n      })\n      .classed('blocking', false)\n    // d.fx = null;\n    // d.fy = null;\n  }\n\n  clicked(d) {\n    d3.select('.focus_node').remove();\n\n      // TODO: wire up 'freeze' button\n      // const input = document.getElementById('freeze-in');\n      // const isChecked = input.checked;\n      // if (isChecked) {\n      //  infobox.display_info(d);\n      // } else {\n    this.simulation.stop();\n    // remove the oldest links and nodes\n    const stop_layer = this.graphViz.graphLayers.depth() - 1;\n    this.graphRoot.selectAll('.old_node' + stop_layer).remove();\n    this.graphRoot.selectAll('.old_edge' + stop_layer).remove();\n    this.graphRoot.selectAll('.old_edgepath' + stop_layer).remove();\n    this.graphRoot.selectAll('.old_edgelabel' + stop_layer).remove();\n    this.graphViz.displayInfo(d);\n    this.graphViz.loadRelatedNodes(d);\n    console.log('node clicked')\n  }\n\n\n  pinIt(elem, data) {\n    d3.event.stopPropagation();\n    const node_pin = d3.select(elem);\n    const pinned_node = d3.select(elem.parentNode);\n    if (!pinned_node.empty() && pinned_node.classed('active_node')) {\n      if (!pinned_node.classed('pinned')) {\n        pinned_node.classed('pinned', true);\n        console.log('Pinned!');\n        node_pin.attr('fill', '#000');\n        pinned_node.moveToFront();\n      } else {\n        pinned_node.classed('pinned', false);\n        console.log('Unpinned!');\n        node_pin.attr('fill', () => this.getNodeColor(data));\n      }\n    }\n  }\n\n  colorize(prop_name) {\n    // Color the nodes according the value of the property 'prop_name'\n    let node_code_color = null;\n    const value_list = d3.selectAll('.node').data();\n    if (prop_name === 'none') {\n      d3.selectAll('.base_circle').style('fill', (d) => {\n        return this.getNodeColor(d);\n      });\n      d3.selectAll('.Pin').style('fill', (d) => {\n        return this.getNodeColor(d);\n      });\n    } else if (prop_name === 'label') {\n      const value_set = new Set(value_list.map((d) => {\n        return d.label;\n      }));\n      node_code_color = d3.scaleOrdinal().domain(value_set).range(d3.range(0, value_set.size));\n      d3.selectAll('.base_circle').style('fill', (d) => {\n        return this.config.colorPalette(node_code_color(d.label));\n      });\n      d3.selectAll('.Pin').style('fill', (d) => {\n        return this.config.colorPalette(node_code_color(d.label));\n      });\n    } else {\n      const value_set = new Set(value_list.map((d) => {\n        if (typeof d.properties[prop_name] !== 'undefined') {\n          return d.properties[prop_name][0].value;\n        }\n      }));\n      node_code_color = d3.scaleOrdinal().domain(value_set).range(d3.range(0, value_set.size));\n      d3.selectAll('.base_circle').style('fill', (d) => {\n        if (typeof d.properties[prop_name] !== 'undefined') {\n          return this.config.colorPalette(node_code_color(d.properties[prop_name][0].value));\n        }\n        return this.getNodeColor(d);\n      });\n      d3.selectAll('.Pin').style('fill', (d) => {\n        if (typeof d.properties[prop_name] !== 'undefined') {\n          return this.config.colorPalette(node_code_color(d.properties[prop_name][0].value));\n        }\n        return this.getNodeColor(d);\n      });\n    }\n  }\n\n  getNodeSize(d) {\n    if ('size' in d) {\n      return d.size;\n    } else {\n      return this.config.default_node_size;\n    }\n  }\n\n  getNodeStrokeWidth(d) {\n    if ('stroke_width' in d) {\n      return d.stroke_width;\n    } else {\n      return this.config.default_stroke_width;\n    }\n  }\n\n  getNodeColor(d) {\n    return this.config.default_node_color;\n    /*\n    if (colored_prop !== 'none') {\n      if (colored_prop === 'label') {\n        return this.color_palette(node_code_color(d.label));\n      } else if (typeof d.properties[colored_prop] !== 'undefined') {\n        if (this.graphSONFormat === GraphsonFormat.GraphSON3) {\n          return this.color_palette(node_code_color(d.properties[colored_prop]['summary']));\n        } else {\n          return this.color_palette(node_code_color(d.properties[colored_prop][0].value));\n        }\n      } else if ('color' in d.properties) {\n        return d.properties.color[0].value;\n      } else {\n        return this.default_node_color;\n      }\n    } else if ('color' in d.properties) {\n      return d.properties.color[0].value;\n    } else {\n      return this.default_node_color;\n    } */\n  }\n\n  getNodeTitle(d) {\n    if ('node_title' in d) {\n      return d.node_title;\n    } else {\n      return d.label;\n    }\n  }\n\n  getNodeText(d) {\n    if ('node_text' in d) {\n      return d.node_text;\n    } else {\n      return d.id;\n    }\n  }\n\n  getNodeSubText(d) {\n    if ('node_subtext' in d) {\n      return d.node_subtext;\n    } else {\n      return d.label;\n    }\n  }\n\n\n  constructor(private graphViz: GraphViz) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/graphViz/graphNodes.ts","import {GraphViz} from './graphViz';\r\nimport {GraphexpService, GraphsonFormat} from '../graphexp.service';\r\nimport * as d3 from 'd3';\r\n\r\nexport class GraphShapes {\r\n\r\n  decorate_old_elements(nb_layers) {\r\n    // Decrease the opacity of nodes and edges when they get old\r\n    for (let k = 0; k < nb_layers; k++) {\r\n      d3.selectAll('.old_edge' + k)\r\n        .style('opacity', function() {\r\n          return 0.8 * (1 - k / nb_layers)\r\n        });\r\n      d3.selectAll('.old_node' + k)\r\n        .style('opacity', function() {\r\n          return 0.8 * (1 - k / nb_layers)\r\n        });\r\n      d3.selectAll('.old_edgelabel' + k)\r\n        .style('opacity', function() {\r\n          return 0.8 * (1 - k / nb_layers)\r\n        });\r\n    };\r\n  }\r\n\r\n  show_names(value: boolean) {\r\n    const text_to_show = d3.selectAll('.text_details');\r\n    if (value) {\r\n      text_to_show.style('visibility', 'visible');\r\n    } else {\r\n      text_to_show.style('visibility', 'hidden');\r\n    }\r\n  }\r\n\r\n  constructor(private graphSONFormat: GraphsonFormat, private graph_viz: GraphViz, private graphexpService: GraphexpService) {\r\n    // https://github.com/wbkd/d3-extended\r\n    d3.selection.prototype.moveToFront = function() {\r\n      // move the selection to the front\r\n      return this.each(function() {\r\n        this.parentNode.appendChild(this);\r\n      });\r\n    };\r\n\r\n    d3.selection.prototype.moveToBack = function() {\r\n      // move the selection to the back\r\n      return this.each(function() {\r\n        const firstChild = this.parentNode.firstChild;\r\n        if (firstChild) {\r\n          this.parentNode.insertBefore(this, firstChild);\r\n        }\r\n      });\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/graphViz/graphShapes.ts","import {GraphLayers} from './graphLayers';\r\nimport {GraphShapes} from './graphShapes';\r\nimport {GraphexpService, GraphsonFormat, ArrangedGraphData} from '../graphexp.service';\r\nimport { D3Node } from '../nodes/d3Node';\r\nimport { ConnectionCreatedEvent } from './ConnectionCreatedEvent';\r\nimport {GraphConfig} from './graphConfig';\r\nimport {GraphLinks} from './graphLinks';\r\nimport {GraphNodes} from './graphNodes';\r\nimport * as d3 from 'd3';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\n\r\nexport class GraphViz {\r\n\r\n  private _graphRoot: any;\r\n  private _graphWidth = 0;\r\n  private _graphHeight = 0;\r\n  private _simulation: any = {};\r\n  private _graphLayers: GraphLayers;\r\n  private _graphShapes: GraphShapes;\r\n  private _graphNodes: GraphNodes;\r\n  private _graphLinks: GraphLinks;\r\n\r\n  dragLine;\r\n\r\n  readonly state = {\r\n    shiftNodeDrag: false\r\n  };\r\n\r\n  public selectedNode: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public connectionCreated: Observable<ConnectionCreatedEvent>;\r\n  public createNodeEvent: BehaviorSubject<D3Node> = new BehaviorSubject<D3Node>(null);\r\n\r\n  get config() {\r\n    return this._config;\r\n  }\r\n  get simulation() {\r\n    return this._simulation;\r\n  }\r\n\r\n  get graphRoot() {\r\n    return this._graphRoot;\r\n  }\r\n\r\n  get nodeModels() {\r\n    return this._graphLayers.nodes;\r\n  }\r\n\r\n  get graphLayers() {\r\n    return this._graphLayers;\r\n  }\r\n\r\n  get graphNodes() {\r\n    return this._graphNodes;\r\n  }\r\n\r\n  get linkModels() {\r\n    return this._graphLayers._Links;\r\n  }\r\n\r\n  get selectLinks() {\r\n    const all_links = this.graphRoot.selectAll('.active_edge')\r\n      .data(this.linkModels, (n) => {\r\n        return n.id;\r\n      });\r\n    return all_links;\r\n  }\r\n\r\n  get selectEdgePaths() {\r\n    const all_edgepaths = this.graphRoot.selectAll('.active_edgepath')\r\n      .data(this.linkModels, (n) => {\r\n        return n.id;\r\n      });\r\n    return all_edgepaths;\r\n  }\r\n\r\n  get selectEdgeLabels() {\r\n    const all_edgelabels = this.graphRoot.selectAll('.active_edgelabel')\r\n      .data(this.linkModels, (n) => {\r\n        return n.id;\r\n      });\r\n    return all_edgelabels;\r\n  }\r\n\r\n  /**\r\n  * get all active nodes in the graph\r\n  */\r\n  get selectGraphNodes() {\r\n    // Existing active nodes\r\n    const allNodes = this.graphRoot.selectAll('g').filter('.active_node')\r\n      .data(this.nodeModels, (n) => {\r\n        return n.id;\r\n      });\r\n    return allNodes;\r\n  }\r\n\r\n\r\n  ///////////////////////////////////////\r\n  // Remove force layout and data\r\n  clear() {\r\n    console.log(this._simulation)\r\n    if (Object.keys(this._simulation).length !== 0) {\r\n      this._simulation.stop();\r\n      this._simulation.nodes([]);\r\n      this._simulation.force('link').links([]);\r\n    }\r\n    this._graphRoot.selectAll('*').remove();\r\n    this.nodeModels.length = 0, this.linkModels.length = 0;\r\n    this._graphLayers.clear_old();\r\n    this._simulation = {};\r\n  }\r\n\r\n\r\n  addzoom(svg) {\r\n    // Add zoom to the svg object\r\n    svg.append('rect')\r\n      .attr('width', this._graphWidth).attr('height', this._graphHeight)\r\n      .style('fill', 'none').style('pointer-events', 'all')\r\n      .call(d3.zoom().scaleExtent([1 / 2, 4]).on('zoom', () => {\r\n        this._graphRoot.attr('transform', d3.event.transform);\r\n      }));\r\n  }\r\n\r\n  simulationStart(center_f) {\r\n    let force_x, force_y;\r\n    this.\r\n      // Define the force applied to the nodes\r\n      _simulation = d3.forceSimulation()\r\n        .force('charge', d3.forceManyBody().strength(this._config.force_strength))\r\n        .force('link', d3.forceLink().strength(this._config.link_strength).id((d) => {\r\n          return d.id;\r\n        }));\r\n\r\n    if (center_f === 1) {\r\n      force_y = this._config.force_x_strength;\r\n      force_x = this._config.force_y_strength;\r\n      this._simulation.force('center', d3.forceCenter(this._graphWidth / 2, this._graphHeight / 2));\r\n    } else {\r\n      force_y = 0;\r\n      force_x = 0;\r\n    }\r\n    this._simulation.force('y', d3.forceY().strength((d) => {\r\n      return force_y;\r\n    }))\r\n      .force('x', d3.forceX().strength((d) => {\r\n        return force_x;\r\n      }));\r\n    return this._simulation;\r\n  }\r\n\r\n\r\n  refreshData(arrangedData: ArrangedGraphData, center_f, with_active_node) {\r\n    // Main visualization function\r\n    const svg_graph = this.graphRoot;\r\n    this._graphLayers.push_layers();\r\n    this._graphLayers.update_data(arrangedData);\r\n\r\n    this._graphLinks.update(arrangedData);\r\n\r\n    this._graphNodes.update(arrangedData);\r\n\r\n    //////////////////////////////////\r\n    // Additional clean up\r\n    this._graphShapes.decorate_old_elements(this._graphLayers.depth());\r\n    svg_graph.selectAll('g').filter('.pinned').moveToFront();\r\n\r\n\r\n    this._graphLayers.remove_duplicates('.active_node', '.old_node');\r\n    this._graphLayers.remove_duplicates('.active_edge', '.old_edge');\r\n    this._graphLayers.remove_duplicates('.active_edgepath', '.old_edgepath');\r\n    this._graphLayers.remove_duplicates('.active_edgelabel', '.old_edgelabel');\r\n\r\n\r\n    // Force simulation simulation model and paramers Associate the simulation with the data\r\n    this._simulation = this.simulationStart(center_f);\r\n    this._simulation.nodes(this.nodeModels).on('tick', () => {\r\n      this._graphNodes.tick();\r\n      this._graphLinks.tick();\r\n    });\r\n    this._simulation.force('link').links(this.linkModels);\r\n    this._simulation.alphaTarget(0);\r\n\r\n  }\r\n\r\n  displayShapeProperty(prop) {\r\n    const prop_id = prop.id;\r\n    const prop_id_nb = prop.getAttribute('id_nb');\r\n    const text_base_offset = 10;\r\n    const text_offset = 10;\r\n    const prop_name = prop_id.slice(prop_id.indexOf('_') + 1);\r\n    const item = prop_id.slice(0, prop_id.indexOf('_'));\r\n    console.log(prop_id, item)\r\n    if (d3.select('#' + prop_id).property('checked')) {\r\n      let elements_text;\r\n      if (item === 'nodes') {\r\n        elements_text = d3.selectAll('.node');\r\n      } else if (item === 'edges') {\r\n        elements_text = d3.selectAll('.edgelabel');\r\n      }\r\n      this.attachEnabledProperties(elements_text, prop_name, prop_id_nb, item);\r\n    } else {\r\n      if (item === 'nodes') {\r\n        d3.selectAll('.node').select('.' + prop_id).remove();\r\n      } else if (item === 'edges') {\r\n        d3.selectAll('.edgelabel').select('.' + prop_id).remove();\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  attachEnabledProperties(graph_objects, prop_name, prop_id_nb, item) {\r\n    let elements_text;\r\n    const text_base_offset = 10;\r\n    const text_offset = 10;\r\n    const prop_id = item + '_' + prop_name;\r\n    if (item === 'nodes') {\r\n      elements_text = graph_objects.append('text').style('pointer-events', 'none');\r\n    } else if (item === 'edges') {\r\n      elements_text = graph_objects.append('textPath')\r\n        .attr('class', 'edge_text')\r\n        .attr('href', function(d, i) {return '#edgepath' + d.id})\r\n        .style('text-anchor', 'middle')\r\n        .style('pointer-events', 'none')\r\n        .attr('startOffset', '70%');\r\n      prop_id_nb = prop_id_nb + 1;\r\n    } else {\r\n      console.log('Bad item name.'); return 1;\r\n    }\r\n    elements_text.classed('prop_details', true).classed(prop_id, true)\r\n      .attr('dy', (d) => {\r\n        return this._graphNodes.getNodeSize(d) + text_base_offset + text_offset * parseInt(prop_id_nb, 10);\r\n      })\r\n      // .attr(\"y\", \".31em\")\r\n      .text((d) => {\r\n        return this.getPropertyValue(d, prop_name, item);\r\n      });\r\n  }\r\n\r\n\r\n  getPropertyValue(d, prop_name, item) {\r\n    if (prop_name in d.properties) {\r\n      if (item === 'nodes') {\r\n        if (this._config.format === GraphsonFormat.GraphSON3) {\r\n          return d.properties[prop_name]['summary'];\r\n        } else if (this._config.format === GraphsonFormat.GraphSON1) {\r\n          return d.properties[prop_name][0].value;\r\n        }\r\n      } else if (item === 'edges') {\r\n        console.log(d.properties[prop_name])\r\n        return d.properties[prop_name];\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  colorize(data) {\r\n    this._graphNodes.colorize(data);\r\n  }\r\n\r\n  displayInfo(data) {\r\n    this.selectedNode.next(data);\r\n  }\r\n\r\n  loadRelatedNodes(d) {\r\n    this.graphexpService.getRelatedNodes(d).then((arrangedData) => {\r\n      this.refreshData(arrangedData, 1, null);\r\n      this.displayInfo(d);\r\n    });\r\n  }\r\n\r\n  addSvgDefinitions(svg) {\r\n    // define arrow markers for graph links\r\n    const defs = svg.append('svg:defs');\r\n    defs.append('svg:marker')\r\n      .attr('id', 'end-arrow')\r\n      .attr('viewBox', '0 -5 10 10')\r\n      .attr('refX', '32')\r\n      .attr('markerWidth', 5)\r\n      .attr('markerHeight', 5)\r\n      .attr('orient', 'auto')\r\n      .append('svg:path')\r\n      .attr('d', 'M0,-5L10,0L0,5');\r\n\r\n    // define arrow markers for leading arrow\r\n    defs.append('svg:marker')\r\n      .attr('id', 'mark-end-arrow')\r\n      .attr('viewBox', '0 -5 10 10')\r\n      .attr('refX', 7)\r\n      .attr('markerWidth', 5)\r\n      .attr('markerHeight', 5)\r\n      .attr('orient', 'auto')\r\n      .append('svg:path')\r\n      .attr('d', 'M0,-5L10,0L0,5');\r\n  }\r\n\r\n  init(label) {\r\n    this._graphLayers = new GraphLayers(this);\r\n    this._graphShapes = new GraphShapes(this._config.format, this, this.graphexpService);\r\n\r\n    // GraphNodes class init\r\n    this._graphNodes = new GraphNodes(this);\r\n    this.connectionCreated = new Observable(observer => {\r\n      this._graphNodes.connectionCreated.subscribe(val => {\r\n        if (val != null) {\r\n          observer.next(val);\r\n          console.log(`connection created: ${val.source.id} -> ${val.target.id}`);\r\n        }\r\n      });\r\n    });\r\n\r\n    this._graphLinks = new GraphLinks(this);\r\n\r\n    const svg = d3.select(label).select('svg');\r\n    const width = +d3.select(label).node().getBoundingClientRect().width;\r\n    const height =  +d3.select(label).node().getBoundingClientRect().height;\r\n    this._graphWidth = width;\r\n    this._graphHeight = height;\r\n\r\n    // displayed when dragging between nodes\r\n    this.dragLine = svg.append('svg:path')\r\n      .attr('class', 'link drag-line hidden')\r\n      .attr('d', 'M0,0L0,0')\r\n      .style('marker-end', 'url(#mark-end-arrow)');\r\n\r\n    svg.attr('width', this._graphWidth).attr('height', this._graphHeight);\r\n    this.addSvgDefinitions(svg);\r\n    this.addzoom(svg);\r\n\r\n    // Finally create a root g node for all the nodes/links\r\n    this._graphRoot = svg.append('g');\r\n  }\r\n\r\n  constructor(\r\n    public graphexpService: GraphexpService,\r\n    private _config: GraphConfig) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/graphViz/graphViz.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".hidden {\\r\\n\\tdisplay: none;\\r\\n}\\r\\n\\r\\n.sv-graphexp mat-sidenav-container {\\r\\n\\twidth: 100%;\\r\\n}\\r\\n\\r\\n.sv-graphexp mat-sidenav {\\r\\n\\tpadding: 1em;\\r\\n\\twidth: 25em;\\r\\n}\\r\\n\\r\\n.sv-graphexp mat-divider {\\r\\n\\tpadding: 5px 0;\\r\\n}\\r\\n\\r\\ndiv.sv-graphexp {\\r\\n\\theight: 100%;\\r\\n}\\r\\n\\r\\n.sv-graphexp-content {\\r\\n\\tpadding: 1em;\\r\\n\\tposition: relative;\\r\\n\\ttop: 0;\\r\\n\\theight: 100%;\\r\\n}\\r\\n\\r\\n.sv-graphexp-left-bar {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\twidth: 10em;\\r\\n}\\r\\n\\r\\n.sv-graphexp-right-bar {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\tright: 0;\\r\\n\\twidth: 10em;\\r\\n}\\r\\n\\r\\npath.drag-line {\\r\\n    fill: none;\\r\\n    stroke: #333;\\r\\n    stroke-width: 4px;\\r\\n    stroke-dasharray: 5 5;\\r\\n    cursor: default;\\r\\n}\\r\\n\\r\\n.edge {\\r\\n\\tstroke: #999;\\r\\n\\tstroke-opacity: 0.8;\\r\\n}\\r\\n\\r\\n.old_edge0 {\\r\\n\\tstroke: #999;\\r\\n\\tstroke-opacity: 0.6;\\r\\n}\\r\\n\\r\\n.node circle {\\r\\n\\tstroke: #000;\\r\\n\\tstroke-width: 1.5px;\\r\\n}\\r\\n\\r\\n.node text {\\r\\n\\tfont: 10px sans-serif;\\r\\n}\\r\\n\\r\\n.node:hover circle {\\r\\n\\tstroke-opacity: 0.6;\\r\\n}\\r\\n\\r\\n.pinned circle {\\r\\n\\tstroke: #000;\\r\\n\\tstroke-width: 1.5px;\\r\\n}\\r\\n\\r\\n.pinned text {\\r\\n\\tfont: 10px sans-serif;\\r\\n}\\r\\n\\r\\n.pinned:hover circle {\\r\\n\\tstroke-opacity: 0.6;\\r\\n}\\r\\n\\r\\n.old_node0 circle {\\r\\n\\tstroke-opacity: 0.9;\\r\\n}\\r\\n\\r\\n.old_node0 text {\\r\\n\\tfont: 10px sans-serif;\\r\\n\\topacity: 0.9;\\r\\n\\tcolor: #000; /* Fallback for older browsers */\\r\\n\\tcolor: rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.cell {\\r\\n\\tfill: none;\\r\\n\\tpointer-events: all;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/git/ngx-graphexp/src/app/modules/graphexp/graphexp.component.css\n// module id = ../../../../../src/app/modules/graphexp/graphexp.component.css\n// module chunks = main","module.exports = \"<div fxLayout fxFlexFill class=\\\"content sv-graphexp\\\">\\n\\t<mat-sidenav-container fxFLex>\\n\\t\\t<mat-sidenav #graphexpSideMenu position=\\\"end\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"1.5em\\\">\\n\\t\\t\\t<button mat-mini-fab color=\\\"accent\\\" (click)=\\\"graphexpSideMenu.toggle()\\\">\\n\\t\\t      <mat-icon>arrow_right</mat-icon>\\n\\t\\t    </button>\\n\\t\\t    <div fxLayout fxLayoutGap=\\\"1em\\\">\\n\\t\\t    \\t<button mat-raised-button (click)=\\\"getGraphInfo()\\\">\\n\\t\\t    \\t\\tRefresh<mat-icon>refresh</mat-icon>\\n\\t\\t    \\t</button>\\n\\t\\t    \\t<button mat-raised-button (click)=\\\"openNodeEditDialog()\\\">\\n\\t\\t\\t\\t\\tCreate<mat-icon>add</mat-icon>\\n\\t\\t\\t\\t</button>\\n\\t\\t    \\t<span fxFlex></span>\\n\\t\\t\\t\\t<button mat-raised-button (click)=\\\"clearGraph()\\\">\\n\\t\\t\\t\\t\\tClear<mat-icon>clear</mat-icon>\\n\\t\\t\\t\\t</button>\\n\\t\\t    </div>\\n\\t\\t    <mat-checkbox [(ngModel)]=\\\"showGraphInfo\\\">Show Graph Info</mat-checkbox>\\n\\t\\t    <mat-checkbox>Show Selection Properties</mat-checkbox>\\n\\t\\t    <mat-checkbox (click)=\\\"showNames()\\\">Show Labels</mat-checkbox>\\n\\t\\t    <mat-checkbox>Freeze Graph</mat-checkbox>\\n\\t\\t\\t<section>\\n\\t\\t\\t\\t<div fxLayout>\\n\\t\\t\\t\\t\\t<label>Visible Layers</label>\\n\\t\\t    \\t\\t<mat-slider min=\\\"1\\\" max=\\\"5\\\" [(ngModel)]=\\\"numberOfLayers\\\" thumbLabel tickInterval=\\\"1\\\"></mat-slider>\\n\\t\\t\\t\\t</div>\\n\\t\\t    </section>\\t\\t    \\n\\t\\t</mat-sidenav>\\n\\t\\t<div fxLayout=\\\"column\\\" fxFlexFill>\\n\\t\\t\\t<mat-toolbar fxLayoutGap=\\\"1em\\\">\\n\\t\\t\\t    <label>Search</label>\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<mat-select [(ngModel)]=\\\"searchField\\\">\\n\\t\\t\\t\\t\\t\\t<mat-optgroup label=\\\"Node\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"id\\\">id</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let item of nodeProperties | async\\\" [value]=\\\"item\\\">{{item}}</mat-option>\\n\\t\\t\\t\\t\\t\\t</mat-optgroup>\\n\\t\\t\\t\\t\\t\\t<mat-optgroup label=\\\"Edge\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-option value=\\\"id\\\">id</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let item of edgeProperties | async\\\" [value]=\\\"item\\\">{{item}}</mat-option>\\n\\t\\t\\t\\t\\t\\t</mat-optgroup>\\n\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<mat-input-container>\\n\\t\\t\\t\\t\\t<input matInput name=\\\"searchValue\\\" [(ngModel)]=\\\"searchValue\\\" placeholder=\\\"Id/Keyword\\\">\\n\\t\\t\\t\\t</mat-input-container>\\n\\t\\t\\t\\t<button (click)=\\\"search()\\\" mat-mini-fab>\\n\\t\\t\\t\\t\\t<mat-icon>search</mat-icon>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t<button mat-mini-fab (click)=\\\"openNodeEditDialog()\\\">\\n\\t\\t\\t\\t\\t<mat-icon>add</mat-icon>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t    <span fxFlex></span>\\n\\t\\t\\t\\t<button mat-mini-fab (click)=\\\"graphexpSideMenu.toggle()\\\">\\n\\t\\t\\t      <mat-icon>menu</mat-icon>\\n\\t\\t\\t    </button>\\n\\t\\t\\t</mat-toolbar>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"sv-graphexp-content\\\">\\n\\t\\t\\t\\t<div class=\\\"sv-graphexp-left-bar\\\">\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"showGraphInfo\\\"><br/>\\n\\t\\t\\t\\t\\t\\t<strong>Node Names</strong>\\n\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let item of nodeNames | async\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{item.key}}: {{item.value}}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"sv-graphexp-right-bar\\\">\\n\\t\\t\\t\\t\\t<strong>Selected Node</strong>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"selectedNode\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>Label: {{selectedNode.label}}</div>\\n\\t\\t\\t\\t\\t\\t\\t<div>Type: {{selectedNode.type}}</div>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let prop of getFlattenedNodeProperties(selectedNode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>{{prop.name}}: {{prop.value}}</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"sv-graphexp\\\" id=\\\"sv_graphexp\\\">\\n\\t\\t\\t\\t\\t<svg></svg>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</mat-sidenav-container>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/git/ngx-graphexp/src/app/modules/graphexp/graphexp.component.html\n// module id = ../../../../../src/app/modules/graphexp/graphexp.component.html\n// module chunks = main","import { ConnectionCreatedEvent } from './graphViz/ConnectionCreatedEvent';\nimport {GraphConfig} from './graphViz/graphConfig';\nimport {GraphViz} from './graphViz/graphViz';\nimport {GraphexpService, GraphsonFormat} from './graphexp.service';\nimport { LinkEditComponent } from './link-edit/link-edit.component';\nimport {NodeEditComponent} from './node-edit/node-edit.component';\nimport {D3Node} from './nodes/d3Node';\nimport { GremlinLink } from './nodes/gremlinLink';\nimport {GremlinNode} from './nodes/gremlinNode';\nimport {Component, OnInit, Input, ViewEncapsulation} from '@angular/core';\nimport {MatDialog} from '@angular/material';\nimport {GremlinService, GremlinClientOptions, GremlinQuery} from '@savantly/gremlin-js';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport * as d3 from 'd3';\n\n\n@Component({\n  selector: 'sv-graphexp',\n  templateUrl: './graphexp.component.html',\n  styleUrls: ['./graphexp.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GraphexpComponent implements OnInit {\n\n  @Input()\n  graphexpService: GraphexpService;\n  @Input()\n  graphConfig?: GraphConfig;\n\n  public searchValue = '';\n  public searchField = 'id';\n  public graphInfoData: {};\n  public numberOfLayers = 3;\n  public showGraphInfo = true;\n  public newNode: any = {};\n  private graphViz: GraphViz;\n\n  get selectedNode() {\n    if (this.graphViz && this.graphViz.selectedNode && this.graphViz.selectedNode.value) {\n      return this.graphViz.selectedNode.value;\n    } else {\n      return null;\n    }\n  }\n\n  get nodeNames() {\n    return this.graphexpService.nodeNames;\n  };\n  get nodeProperties() {\n    return this.graphexpService.nodeProperties;\n  };\n  get edgeProperties() {\n    return this.graphexpService.edgeProperties;\n  };\n  get enableEdit() {\n    return (this.graphConfig && this.graphConfig.enableEdit);\n  }\n  get nodeLabels() {\n    return this.graphConfig.nodeLabels;\n  }\n  get linkLabels() {\n    return this.graphConfig.linkLabels;\n  }\n\n  ngOnInit(): void {\n    if (!this.graphConfig) {\n      this.graphConfig = new GraphConfig();\n    }\n    this.graphViz = new GraphViz(this.graphexpService, this.graphConfig);\n    setTimeout(() => {\n      this.graphViz.init('#sv_graphexp');\n      this.graphexpService.queryGraphInfo();\n\n      this.graphViz.connectionCreated.subscribe((val: ConnectionCreatedEvent) => {\n        console.log(`GraphexpComponent#ngAfterViewInit: connection created ${val}`);\n        const gremlinLink = new GremlinLink();\n        gremlinLink.source = val.source.id;\n        gremlinLink.target = val.target.id;\n        this.openLinkEditDialog(gremlinLink);\n      });\n\n      this.graphViz.createNodeEvent.subscribe((d3Node: D3Node) => {\n        if (d3Node === null) {\n          return;\n        }\n        const gremlinNode = new GremlinNode();\n        this.openNodeEditDialog(gremlinNode);\n      });\n    });\n\n  }\n\n  openLinkEditDialog(item: GremlinLink) {\n    const dialogRef = this.dialog.open(LinkEditComponent, {\n      width: '30em',\n      data: {labels: this.linkLabels, item: item}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result) {\n        this.createLink(result);\n      }\n    });\n  }\n\n  openNodeEditDialog(item?: GremlinNode) {\n    item = item || new GremlinNode();\n    const dialogRef = this.dialog.open(NodeEditComponent, {\n      width: '30em',\n      data: {labels: this.nodeLabels, item: item}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result) {\n        this.createNode(result);\n      }\n    });\n  }\n\n  createLink(data: GremlinLink) {\n    this.graphexpService.createLink(data).then(tinkerNode => {\n      console.log(data);\n    }, err => {console.error(err)});\n  }\n\n  createNode(data: GremlinNode) {\n    this.graphexpService.createNode(data.label, data.properties).then(tinkerNode => {\n      console.log(data);\n    }, err => {console.error(err)});\n  }\n\n  search() {\n    console.log(`searching field: ${this.searchField}, value: ${this.searchValue}`);\n    this.graphexpService.queryNodes(this.searchField, this.searchValue).then(data => {\n      this.graphViz.refreshData(data, 1, null);\n    }).catch((err) => {\n      console.error(err);\n    });\n  }\n\n  getFlattenedNodeProperties(node: D3Node) {\n    const props = [];\n    for (const prop of Object.keys(node.properties)) {\n      const valArray = node.properties[prop];\n      const val = valArray[0]['value'];\n      props.push({\n        name: prop,\n        value: val\n      });\n    }\n    return props;\n  }\n\n  showNames() {\n  }\n\n  setNumberOfLayers() {\n    this.graphConfig.numberOfLayers = this.numberOfLayers;\n  }\n\n  clearGraph() {\n    this.graphViz.clear();\n  }\n\n  toggleGraphInfo() {\n    this.showGraphInfo = !this.showGraphInfo;\n  }\n\n  getGraphInfo() {\n    this.graphexpService.queryGraphInfo();\n  }\n\n  constructor(public dialog: MatDialog) {}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/graphexp.component.ts","export { GraphexpService } from './graphexp.service';\nexport { GraphConfig } from './graphViz/graphConfig';\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {GraphexpComponent} from './graphexp.component';\nimport {FormsModule} from '@angular/forms';\nimport {\n  MatSidenavModule,\n  MatButtonModule,\n  MatIconModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatListModule,\n  MatSelectModule,\n  MatCheckboxModule,\n  MatToolbarModule,\n  MatSliderModule,\n  MatDialogModule\r\n} from '@angular/material';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport { NodeEditComponent } from './node-edit/node-edit.component';\nimport { LinkEditComponent } from './link-edit/link-edit.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatSliderModule,\n    MatDialogModule,\n    FlexLayoutModule\n  ],\n  declarations: [GraphexpComponent, NodeEditComponent, LinkEditComponent],\n  entryComponents: [NodeEditComponent, LinkEditComponent],\n  providers: [],\n  exports: [\n    GraphexpComponent,\n    CommonModule,\n    FormsModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatSliderModule,\n    MatDialogModule,\n    FlexLayoutModule]\n})\nexport class GraphexpModule {}\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/graphexp.module.ts","import { D3Node } from './nodes/d3Node';\nimport { GremlinLink } from './nodes/gremlinLink';\nimport { TinkerNode } from './nodes/tinkerNode';\nimport {Injectable} from '@angular/core';\nimport {GremlinService, GremlinClientOptions, GremlinQuery, GremlinQueryResponse} from '@savantly/gremlin-js';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\n\nexport enum GraphsonFormat {\n  GraphSON1 = 1,\n  GraphSON2 = 2,\n  GraphSON3 = 3\n}\n\nexport class ArrangedGraphData {\n  nodes: D3Node[];\n  links: D3Node[];\n}\n\nexport class KV {\n  key: string;\n  value: string;\n}\n\n@Injectable()\nexport class GraphexpService {\n\n  private gremlinService: GremlinService;\n  public COMMUNICATION_METHOD: GraphsonFormat = GraphsonFormat.GraphSON3;\n  public graphInfoData = new BehaviorSubject<any>({});\n  public nodeNames = new BehaviorSubject<string[]>([]);\n  public nodeProperties = new BehaviorSubject<string[]>([]);\n  public edgeProperties = new BehaviorSubject<string[]>([]);\n  node_limit_per_request = 50;\n\n\n  public queryGraphInfo() {\n    const gremlin_query_nodes = 'nodes = g.V().groupCount().by(label);';\n    const gremlin_query_edges = 'edges = g.E().groupCount().by(label);';\n    const gremlin_query_nodes_prop = 'nodesprop = g.V().valueMap().select(keys).groupCount();';\n    const gremlin_query_edges_prop = 'edgesprop = g.E().valueMap().select(keys).groupCount();';\n\n    const gremlinQuery = gremlin_query_nodes + gremlin_query_nodes_prop\n      + gremlin_query_edges + gremlin_query_edges_prop\n      + '[nodes.toList(),nodesprop.toList(),edges.toList(),edgesprop.toList()]';\n    this.executeQuery(gremlinQuery).then((response: GremlinQueryResponse) => {\n      this.handleGraphInfo(response.data);\n    });\n  }\n\n  public queryNodes(field: string, value: string): Promise<ArrangedGraphData> {\n    const input_string = value;\n    const input_field = field;\n    let filtered_string = input_string; // You may add .replace(/\\W+/g, ''); to refuse any character not in the alphabet\n    if (filtered_string.length > 50) {\n      filtered_string = filtered_string.substring(0, 50); // limit string length\n    }\n    // Translate to Gremlin query\n    let gremlin_query_nodes = null;\n    let gremlin_query_edges = null;\n    let gremlin_query = null;\n    if (input_string === '') {\n      gremlin_query_nodes = `nodes = g.V().limit(${this.node_limit_per_request})`;\n      gremlin_query_edges =\n        `edges = g.V().limit(${this.node_limit_per_request}).aggregate('node').outE().as('edge').inV().where(within('node')).select('edge')`;\n      gremlin_query = gremlin_query_nodes + '\\n' + gremlin_query_edges + '\\n' + '[nodes.toList(),edges.toList()]';\n\n    } else {\n      let has_str = `has('${input_field}', '${filtered_string}')`;\n      if (this.isInt(input_string)) {\n        has_str = `has('${input_field}', ${filtered_string})`;\n      }\n      gremlin_query = 'g.V().' + has_str;\n      gremlin_query_nodes = 'nodes = g.V().' + has_str;\n      gremlin_query_edges = 'edges = g.V().' + has_str\n        + `.aggregate('node').outE().as('edge').inV().where(within('node')).select('edge')`;\n      gremlin_query = gremlin_query_nodes + '\\n' + gremlin_query_edges + '\\n' + '[nodes.toList(),edges.toList()]'\n    }\n    console.log(gremlin_query);\n    return new Promise<ArrangedGraphData>((resolve, reject) => {\n      this.executeQuery(gremlin_query).then(response => {\n        resolve(this.arrangeData(response.data));\n      }, error => {reject(error)})\n    });\n  }\n\n  public getRelatedNodes(d: any) {\n    let id = d.id;\n    if (isNaN(id)) {\n      id = `'${id}'`;\n    }\n    const gremlin_query_nodes = `nodes = g.V(${id}).as('node').both().as('node').select(all,'node').inject(g.V(${id})).unfold()`;\n    const gremlin_query_edges = `edges = g.V(${id}).bothE()`;\n    const gremlin_query = `${gremlin_query_nodes}\\n ${gremlin_query_edges}\\n[nodes.toList(),edges.toList()]`;\n    return new Promise<ArrangedGraphData>((resolve, reject) => {\n      this.executeQuery(gremlin_query).then(response => {\n        resolve(this.arrangeData(response.data));\n      }, error => {reject(error)})\n    });\n  }\n\n  public createNode(label: string, properties: KV[]) {\n    const promise = new Promise<TinkerNode>((resolve, reject) => {\n      let propString = '';\n      properties.forEach((kv) => {\n        propString += `, '${kv.key}', '${kv.value}'`;\n      });\n      const gremlin = `vertex = graph.addVertex(label, '${label}'${propString})`;\n      console.log(`executing query: ${gremlin}`);\n      this.executeQuery(gremlin).then(response => {\n        resolve(response.data);\n      }, error => {\n        console.error(error);\n        reject(error);\n      });\n    });\n    return promise;\n  }\n\n  public createLink(item: GremlinLink) {\n    const properties = item.properties;\n    const promise = new Promise<TinkerNode>((resolve, reject) => {\n      const gremlin = `edge = g.V(${item.source}).next().addEdge('${item.label}',g.V(${item.target}).next());`;\n      console.log(`executing query: ${gremlin}`);\n      this.executeQuery(gremlin).then(response => {\n        resolve(response.data);\n      }, error => {\n        console.error(error);\n        reject(error);\n      });\n    });\n    return promise;\n  }\n\n  public executeQuery(gremlin: string, bindings?: {}): Promise<GremlinQueryResponse> {\n    const promise = new Promise<GremlinQueryResponse>((resolve, reject) => {\n      const query = this.gremlinService.createQuery(gremlin, bindings);\n      query.onComplete = (response) => {\n        resolve(response);\n      };\n      this.gremlinService.sendMessage(query);\n    });\n    return promise;\n  }\n\n  private handleGraphInfo(data) {\n    if (this.COMMUNICATION_METHOD === GraphsonFormat.GraphSON3) {\n      data = this.graphson3to1(data);\n    }\n    const nodeNames = [];\n    data[0].map((nameGroup) => {\n      for (const nameItem of Object.keys(nameGroup)) {\n        nodeNames.push({key: nameItem, value: nameGroup[nameItem]});\n      }\n    });\n    this.nodeNames.next(nodeNames);\n    this.graphInfoData.next(data);\n    this.nodeProperties.next(this.make_properties_list(data[1][0]));\n    this.edgeProperties.next(this.make_properties_list(data[3][0]));\n  }\n\n  private graphson3to1(data: any) {\n    // Convert data from graphSON v2 format to graphSON v1\n    if (!(Array.isArray(data) || ((typeof data === 'object') && (data !== null)))) {\n      return data;\n    }\n    if ('@type' in data) {\n      if (data['@type'] === 'g:List') {\n        data = data['@value'];\n        return this.graphson3to1(data);\n      } else if (data['@type'] === 'g:Set') {\n        data = data['@value'];\n        return data;\n      } else if (data['@type'] === 'g:Map') {\n        const data_tmp = {}\n        for (let i = 0; i < data['@value'].length; i += 2) {\n          let data_key = data['@value'][i];\n          if ((typeof data_key === 'object') && (data_key !== null)) {\n            data_key = this.graphson3to1(data_key);\n          }\n          if (Array.isArray(data_key)) {\n            data_key = JSON.stringify(data_key).replace(/\\'/g, ' ');\n          }\n          data_tmp[data_key] = this.graphson3to1(data['@value'][i + 1]);\n        }\n        data = data_tmp;\n        return data;\n      } else {\n        data = data['@value'];\n        if ((typeof data === 'object') && (data !== null)) {\n          data = this.graphson3to1(data);\n        }\n        return data;\n      }\n    } else if (Array.isArray(data) || ((typeof data === 'object') && (data !== null))) {\n      for (const key of Object.keys(data)) {\n        data[key] = this.graphson3to1(data[key]);\n      }\n      return data;\n    }\n    return data;\n  }\n  private arrangeData(data): ArrangedGraphData {\n    if (this.COMMUNICATION_METHOD === GraphsonFormat.GraphSON3) {\n      data = this.graphson3to1(data);\n      return this.arrange_datav3(data);\n    } else {\n      return this.arrange_datav2(data);\n    }\n  }\n\n  private arrange_datav3(data): ArrangedGraphData {\n    // Extract node and edges from the data returned for 'search' and 'click' request\n    // Create the graph object\n    const nodes = [], links = [];\n    for (const key of Object.keys(data)) {\n      data[key].forEach((item) => {\n        if (!('inV' in item) && this.idIndex(nodes, item.id) == null) { // if vertex and not already in the list\n          item.type = 'vertex';\n          nodes.push(this.extract_infov3(item));\n        }\n        if (('inV' in item) && this.idIndex(links, item.id) == null) {\n          item.type = 'edge';\n          links.push(this.extract_infov3(item));\n        }\n      });\n    }\n    return {nodes: nodes, links: links};\n  }\n  private arrange_datav2(data: any): ArrangedGraphData {\n    // Extract node and edges from the data returned for 'search' and 'click' request\n    // Create the graph object\n    const nodes = [], links = [];\n    for (const key of Object.keys(data)) {\n      data[key].forEach(function(item) {\n        if (item.type === 'vertex' && this.idIndex(nodes, item.id) === null) { // if vertex and not already in the list\n          nodes.push(this.extract_infov2(item));\n        }\n\n        if (item.type === 'edge' && this.idIndex(links, item.id) == null) {\n          links.push(this.extract_infov2(item));\n        }\n      });\n    }\n    return {nodes: nodes, links: links};\n  }\n\n  private extract_infov2(data) {\n    const data_dic = {id: data.id, label: data.label, type: data.type, properties: {}, source: null, target: null};\n    const prop_dic = data.properties;\n    for (const key in prop_dic) {\n      if (prop_dic.hasOwnProperty(key)) {\n        data_dic.properties[key] = prop_dic[key];\n      }\n    }\n    if (data.type === 'edge') {\n      data_dic.source = data.outV;\n      data_dic.target = data.inV;\n    }\n    return data_dic;\n  }\n\n  private extract_infov3(data) {\n    const data_dic = {id: data.id, label: data.label, type: data.type, properties: {}, source: null, target: null};\n    const prop_dic = data.properties;\n    for (const key in prop_dic) {\n      if (prop_dic.hasOwnProperty(key)) {\n        let property = null;\n        if (data.type === 'vertex') {// Extracting the Vertexproperties (properties of properties for vertices)\n          property = prop_dic[key];\n          property['summary'] = this.get_vertex_prop_in_list(prop_dic[key]).toString();\n        } else {\n          property = prop_dic[key]['value'];\n        }\n        data_dic.properties[key] = property;\n      }\n    }\n    if (data.type === 'edge') {\n      data_dic.source = data.outV\n      data_dic.target = data.inV\n    }\n    return data_dic\n  }\n  private get_vertex_prop_in_list(vertexProperty): any {\n    const prop_value_list = [];\n    for (const key of Object.keys(vertexProperty)) {\n      prop_value_list.push(vertexProperty[key]['value']);\n    }\n    return prop_value_list;\n  }\n\n  private idIndex(list, elem) {\n    // find the element in list with id equal to elem\n    // return its index or null if there is no\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].id === elem) {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  private make_properties_list(data: {}) {\n    const prop_dic = {};\n    for (let prop_str of Object.keys(data)) {\n      prop_str = prop_str.replace(/[\\[\\ \\\"\\'\\]]/g, ''); // get rid of symbols [,\",',] and spaces\n      const prop_list = prop_str.split(',');\n      for (let prop_idx = 0; prop_idx < prop_list.length; prop_idx++) {\n        prop_dic[prop_list[prop_idx]] = 0;\n      }\n    }\n    const properties_list = [];\n    for (const key of Object.getOwnPropertyNames(prop_dic)) {\n      properties_list.push(key);\n    }\n    return properties_list;\n  }\n\n  private isInt(value) {\n    return !isNaN(value) &&\n      !isNaN(parseInt(value, 10));\n  }\n\n  updateSelection(edge: D3Node) {\n    console.log('graphexpService#updateSelection: edge selected: ' + edge.id);\n  }\n\n  constructor(options: any) {\n    this.gremlinService = new GremlinService(options);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/graphexp.service.ts","export { GraphexpModule } from './graphexp.module';\r\nexport { GraphConfig } from './graphViz/graphConfig';\r\nexport { GraphexpComponent } from './graphexp.component';\r\nexport { GraphexpService } from './graphexp.service';\r\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/index.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/git/ngx-graphexp/src/app/modules/graphexp/link-edit/link-edit.component.css\n// module id = ../../../../../src/app/modules/graphexp/link-edit/link-edit.component.css\n// module chunks = main","module.exports = \"<h2 mat-dialog-title>Edit Link</h2>\\n<mat-dialog-content>\\n\\t<div fxLayout fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"1em\\\">\\n\\t\\t<mat-input-container>\\n\\t\\t\\t<mat-select [(ngModel)]=\\\"data.item.label\\\" placeholder=\\\"Label\\\">\\n\\t\\t\\t\\t<mat-option *ngFor=\\\"let item of data.labels\\\" [value]=\\\"item\\\">{{item}}</mat-option>\\n\\t\\t\\t</mat-select>\\n\\t\\t</mat-input-container>\\n\\t\\t<div>\\n\\t\\t\\t<button mat-raised-button (click)=\\\"createProperty()\\\"><mat-icon>add</mat-icon>Add Property</button>\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n\\t\\n\\t<div fxLayout fxLayoutGap=\\\"1em\\\" *ngFor=\\\"let item of data.item.properties\\\">\\n\\t\\t<mat-input-container>\\n\\t\\t\\t<input matInput placeholder=\\\"property name\\\" [(ngModel)]=\\\"item.key\\\">\\n\\t\\t</mat-input-container>\\n\\t\\t<mat-input-container>\\n\\t\\t\\t<input matInput placeholder=\\\"property value\\\" [(ngModel)]=\\\"item.value\\\">\\n\\t\\t</mat-input-container>\\n\\t</div>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n\\t<button mat-button mat-dialog-close>Cancel</button>\\n\\t<!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\\n\\t<button mat-button [mat-dialog-close]=\\\"data.item\\\">Confirm</button>\\n</mat-dialog-actions>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/git/ngx-graphexp/src/app/modules/graphexp/link-edit/link-edit.component.html\n// module id = ../../../../../src/app/modules/graphexp/link-edit/link-edit.component.html\n// module chunks = main","import { GremlinLink } from '../nodes/gremlinLink';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'sv-link-edit',\n  templateUrl: './link-edit.component.html',\n  styleUrls: ['./link-edit.component.css']\n})\nexport class LinkEditComponent implements OnInit {\n\n  createProperty() {\n    this.data.item.properties.push({key: '', value: ''});\n  }\n\n  constructor(\n    public dialogRef: MatDialogRef<LinkEditComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/link-edit/link-edit.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/git/ngx-graphexp/src/app/modules/graphexp/node-edit/node-edit.component.css\n// module id = ../../../../../src/app/modules/graphexp/node-edit/node-edit.component.css\n// module chunks = main","module.exports = \"<h2 mat-dialog-title>Edit Node</h2>\\n<mat-dialog-content>\\n\\t<div fxLayout fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"1em\\\">\\n\\t\\t<mat-input-container>\\n\\t\\t\\t<mat-select [(ngModel)]=\\\"data.item.label\\\" placeholder=\\\"Label\\\">\\n\\t\\t\\t\\t<mat-option *ngFor=\\\"let item of data.labels\\\" [value]=\\\"item\\\">{{item}}</mat-option>\\n\\t\\t\\t</mat-select>\\n\\t\\t</mat-input-container>\\n\\t\\t<div>\\n\\t\\t\\t<button mat-raised-button (click)=\\\"createProperty()\\\"><mat-icon>add</mat-icon>Add Property</button>\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n\\t\\n\\t<div fxLayout fxLayoutGap=\\\"1em\\\" *ngFor=\\\"let item of data.item.properties\\\">\\n\\t\\t<mat-input-container>\\n\\t\\t\\t<input #propertyName matInput placeholder=\\\"property name\\\" [(ngModel)]=\\\"item.key\\\" />\\n\\t\\t</mat-input-container>\\n\\t\\t<mat-input-container>\\n\\t\\t\\t<input #propertyValue matInput placeholder=\\\"property value\\\" [(ngModel)]=\\\"item.value\\\" />\\n\\t\\t</mat-input-container>\\n\\t</div>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n\\t<button mat-button mat-dialog-close>Cancel</button>\\n\\t<!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\\n\\t<button mat-button [mat-dialog-close]=\\\"data.item\\\">Confirm</button>\\n</mat-dialog-actions>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/git/ngx-graphexp/src/app/modules/graphexp/node-edit/node-edit.component.html\n// module id = ../../../../../src/app/modules/graphexp/node-edit/node-edit.component.html\n// module chunks = main","import { KV } from '../graphexp.service';\nimport { GremlinNode } from '../nodes/gremlinNode';\nimport {Component, OnInit, Inject} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'sv-node-edit',\n  templateUrl: './node-edit.component.html',\n  styleUrls: ['./node-edit.component.css']\n})\nexport class NodeEditComponent implements OnInit {\n\n  createProperty() {\n    this.data.item.properties.push(new KV());\n  }\n\n  constructor(\n    public dialogRef: MatDialogRef<NodeEditComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/node-edit/node-edit.component.ts","\nexport class D3Node {\n\n  fx?: number;\n  fy?: number;\n  id: any;\n  index?: number;\n  label?: string;\n  properties: any = {};\n  source?: D3Node;\n  target?: D3Node;\n  type: string;\n  vx?: number;\n  vy?: number;\n  x: number;\n  y: number;\n  value: any;\n\n  addProperty(key: string, value: any) {\n    this.properties[key] =  value;\n  }\n\n  removeProperty(key: string) {\n    delete this.properties[key];\n  }\n\n  constructor(options?: any) {\n    Object.assign(this, options);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/nodes/d3Node.ts","import { GremlinNode } from './gremlinNode';\r\n\r\nexport class GremlinLink extends GremlinNode {\r\n  source: number;\r\n  target: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/nodes/gremlinLink.ts","import { KV } from '../graphexp.service';\r\n\r\nexport class GremlinNode {\r\n  label = '';\r\n  properties: KV[] = [];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/app/modules/graphexp/nodes/gremlinNode.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/git/ngx-graphexp/src/main.ts"],"sourceRoot":"webpack:///"}